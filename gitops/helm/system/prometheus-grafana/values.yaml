metrics-k3s1:
  prometheus-grafana:
    prometheus:
      enabled: true
      ingress:
          enabled: true
          ingressClassName: nginx
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt"
            nginx.ingress.kubernetes.io/ssl-redirect: "false"
            nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
            nginx.ingress.kubernetes.io/auth-type: basic
            nginx.ingress.kubernetes.io/auth-secret: prometheus-basic-auth-secret
            nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
          hosts:
            - prometheus.k3s1.ujstor.com
          tls:
            - secretName: prometheus-tls
              hosts:
                - prometheus.k3s1.ujstor.com
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt"
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
          nginx.ingress.kubernetes.io/auth-type: basic
          nginx.ingress.kubernetes.io/auth-secret: prometheus-basic-auth-secret
          nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
        hosts:
          - alertmanager.k3s1.ujstor.com
        tls:
          - secretName: alertmanager-tls
            hosts:
              - alertmanager.k3s1.ujstor.com
secret-store:
  secretStore:
    clusterWide: false
    provider:
      type: kubernetes
      kubernetes:
        auth:
          serviceAccount:
            create: true
            name: "prometheus-grafana-secret-store-sa"
